[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Submission Guidelines",
    "section": "",
    "text": "This article explains the process for submitting an article to be published in CESTA’s Anthology."
  },
  {
    "objectID": "index.html#writing-the-article",
    "href": "index.html#writing-the-article",
    "title": "Submission Guidelines",
    "section": "Writing the article",
    "text": "Writing the article\n  CESTA’s Anthology utilizes Quarto for crafting the articles. The authors are expected to submit the web files generated using CESTA’s Quarto template for publication.\n  \n  \n  \n  \n  \n  \n  Quarto Template for writing Anthology articles\n  \n  \n  \n  The template can be accessed here: https://github.com/cesta-online/article-quarto-template\n  \n  \n  \n  How to use the Quarto template?\n  Using the template involves the following steps:\n  \n  Complete the pre-requisites\n  \n  Create a Github account if you don’t have one already\n  Install the following in your machine:\n  \n  Git\n  Python 3.6 or later\n  \n  \n  \n  \n  \n  \n  Using Homebrew For Mac\n  \n  \n  \n  For Mac, use Homebrew to install both Git and Python if you don’t have them installed already.\n  \n  \n  Quarto (Latest Version)\n  VS Code (Latest Version)\n  \n  GitHub should be configured in VS Code to manage the repository easily\n  Quarto extension can be install in VS Code to preview and render the website\n  \n  \n  \n  \n  \n  Copy the template to your personal Github account\n  \n  Open the template Github link\n  The template can be copied by clicking on the Use this template button in the repository. (Note: The button appears only if you are logged in to your Github account)\n  Provide a name for the repository and click on Create repository from template.\n  \n  The repository name should be in the format anthology-{project-name}-{quarter}-{year}. For example, anthology-know-systemic-racism-spring-2023.\n  \n  Keep the repository public.\n  Copy the repository link to your clipboard.\n  \n  \n  \n  Set up a virtual environment on your local machine\n  \n  Using VS Code, clone the copied repository to your local machine\n  Open the cloned repository in VS Code\n  Open the Terminal in VS code (not the main terminal) and run the following commands\n  \n  Setup the virtual environment using python3 -m venv .venv or python -m venv .venv\n  Activate the virtual environment using source .venv/bin/activate (Mac & Linux) or .\\.venv\\Scripts\\Activate (Windows)\n  \n  Important Note: You must activate the virtual environment every time you close and reopen the vscode.\n  \n  Install the required packages using pip3 install -r requirements.txt or pip install -r requirements.txt\n  \n  \n  \n  \n  Build your project site\n  \n  Preview the template using quarto preview in the VS code terminal\n  Authoring the article is done in the index.qmd file and quarto renders it automatically into webfiles in the public folder.\n  Add content to the template following the guidelines. Any changes you make will appear immediately in a browser window via Quarto preview.\n  See Quarto documentation for details about adding interactive content to your site\n  \n  \n  Creating a shareable website link\n  \n  Running quarto preview will create the website files in the public folder\n  Commit the changes from the Git repo in your local machine to the Github repo to keep the code updated in the Github repo.\n  You can use Github Pages to host the website in your Github account and share the link internally for review.\n  Note that the website files are served from the public folder in the repository. The website link will be in the format https://{github-username}.github.io/{repository-name}/public.\n  \n  \n  \n  \n  What happens when I close my VS Code?\n  When you open your VS code to work on your project again later, all you need to do is the following:\n  \n  Open your project directory in VS Code\n  Activate the virtual environment in the VS Code terminal using source .venv/bin/activate (Mac & Linux) or .\\.venv\\Scripts\\Activate (Windows)\n  Run quarto preview in the VS code terminal to preview the changes as you make edits to the index.qmd file"
  },
  {
    "objectID": "index.html#submitting-the-article-for-review",
    "href": "index.html#submitting-the-article-for-review",
    "title": "Submission Guidelines",
    "section": "Submitting the article for review",
    "text": "Submitting the article for review\n  \n  Once your article is ready for submission, write an email to cesta-online@stanford.edu with the following information:\n  \n  \n  \n  \n  \n  \n  Email Info\n  \n  \n  \n  \n  Subject: Anthology Submission: {Project Name}\n  Body:\n  \n  Your article link hosted in Github Pages\n  Your Github Username\n  \n  \n  \n  \n  The CESTA team will review your submission. If approved, an empty repository will be created in the CESTA Github organization and you will be added as a collaborator.\n  \n  \n  Submitting the website files to CESTA’s Repo\n  \n  Run quarto render to generate the article web files in the public folder of your current repository.\n  You can then push your article files inside the public folder of your current repository to the new repository provided by CESTA. You can follow the steps below to push the files to the new repository.\n  \n  Create a new directory in your local machine outside the current active repository. This new directory will be used to push the contents of the public folder to the new repository in Github.\n  Copy the contents of the public folder to the new directory\n  \n  The new directory should have index.html and other files and folders from the public folder. The files and folders outside the public folder should not be copied.\n  \n  Open the new directory in VS Code\n  Use terminal in VS Code to push the contents to the new repository\n  \n  Initialize the repository using git init\n  Set the default branch to main using git checkout -b main\n  Add the files to the repository using git add .\n  Commit the changes using git commit -m \"Initial commit\"\n  Add the remote repository using git remote add origin &lt;repository-url&gt;. This repository url is the one provided by CESTA.\n  Push the changes to the remote repository using git push -u origin main\n  \n  \n  Once the files are pushed to the new repository, inform the CESTA team. The CESTA team will review the uploaded files in the new repository and publish the article on the CESTA website."
  },
  {
    "objectID": "index.html#important-tips",
    "href": "index.html#important-tips",
    "title": "Submission Guidelines",
    "section": "Important Tips",
    "text": "Important Tips\n  \n  If you are adding a new Python library to the project, make sure to update the requirements.txt file\n  If a content is not getting rendered properly with the Quarto markdown syntax, often it can be fixed with adding line breaks before or after the syntax."
  }
]